<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<style>
    body{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 50px;
    }
    table {
        width: 100%;
        border-collapse: collapse;
    }

    table,
    th,
    td {
        border: 1px solid black;
    }

    th,
    td {
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }


</style>

<body>
    <h1>Halo Boss</h1>
    <table>
        <h4>Tabel Stock Sampah</h4>
        <thead>
            <tr>
                <th>Trash Name</th>
                <th>Trash Type</th>
                <th>Trash Price (per Kg)</th>
                <th>Stock</th>
            </tr>
        </thead>
        <tbody id="table-body">
        </tbody>
    </table>

    <table id="pickupRequest">
        <h4>Tabel Request Pickup</h4>
        <tr>
            <th>User Id</th>
            <th>Trash Name</th>
            <th>Trash Type</th>
            <th>Quantity</th>
            <th>Location</th>
            <th>Trash Price (per Kg)</th>
            <th>Total Reward</th>
        </tr>
    </table>
    <div id="myPlot" style="width:100%;max-width:700px"></div>

</body>
<script>
    $.ajax({
        url: `http://localhost:3000/trashstock`,
        // url: `https://backendtrash-production.up.railway.app/trashstock`,
        type: 'GET',
        success: function (data) {
            console.log(data);
            data.forEach(element => {
                $('#table-body').append(`
                        <tr>
                            <td>${element.trashDetail}</td>
                            <td>${element.trashType}</td>
                            <td>${element.trashPrice}</td>
                            <td>${element.qty}</td>
                        </tr>
                    `);
            });
        }
    });

    $.ajax({
        // url: `http://localhost:3000/pickup?status=Available`,
        url: `http://localhost:3000/pickup`,
        // url: `https://backendtrash-production.up.railway.app/pickup?status=Available`,
        type: 'GET',
        success: function (data) {
            console.log(data);
            data.forEach(element => {
                $('#pickupRequest').append(`
                        <tr>
                            <td>${element.userId}</td>
                            <td>${element.trashDetail}</td>
                            <td>${element.trashType}</td>
                            <td>${element.qty}</td>
                            <td>${JSON.stringify(element.location)}</td>
                            <td>${element.trashPrice}</td>
                            <td>${element.totalReward}</td>
                        </tr>
                    `);
            });
        }
    });
</script>

<script>
    const xArray = [50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150];
    const yArray = [7, 8, 8, 9, 9, 9, 10, 11, 14, 14, 15];

    // Calculate Sums
    let xSum = 0, ySum = 0, xxSum = 0, xySum = 0;
    let count = xArray.length;
    for (let i = 0, len = count; i < count; i++) {
        xSum += xArray[i];
        ySum += yArray[i];
        xxSum += xArray[i] * xArray[i];
        xySum += xArray[i] * yArray[i];
    }

    // Calculate slope and intercept
    let slope = (count * xySum - xSum * ySum) / (count * xxSum - xSum * xSum);
    let intercept = (ySum / count) - (slope * xSum) / count;

    // Generate values
    const xValues = [];
    const yValues = [];
    for (let x = 50; x <= 150; x += 1) {
        xValues.push(x);
        yValues.push(x * slope + intercept);
    }

    const data = [
        { x: xArray, y: yArray, mode: "markers" },
        { x: xValues, y: yValues, mode: "line" }
    ];

    const layout = {
        xaxis: { range: [40, 160], title: "Week" },
        yaxis: { range: [5, 16], title: "Trash Pickup Request" },
        title: "Weekly Trash Pickup Request"
    };

    Plotly.newPlot("myPlot", data, layout);
</script>

</html>